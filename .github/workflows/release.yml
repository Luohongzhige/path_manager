name: Build and Publish to TestPyPI

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      
      - name: üß† Extract version from pyproject.toml
        id: version
        run: |
          version=$(grep '^version *= *' pyproject.toml | sed -E 's/version *= *"([^"]+)"/\1/')
          echo "üì¶ Extracted version: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build distribution
        run: |
          rm -rf dist/
          python -m build

      - name: üöÄ Upload to TestPyPI
        run: twine upload --repository-url https://test.pypi.org/legacy/ dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

      - name: üì¶ Retry install from TestPyPI until expected version
        run: |
          set -e

          EXPECTED_VERSION="${{ steps.version.outputs.version }}"
          echo "üß† Expecting to install version: $EXPECTED_VERSION"

          for i in {1..5}; do
            echo "üîÅ Attempt $i to install path-manager-qiaoy..."
            pip uninstall -y path-manager-qiaoy || true
            pip install --no-cache-dir -i https://test.pypi.org/simple/ path-manager-qiaoy

            INSTALLED_VERSION=$(pip show path-manager-qiaoy | grep ^Version: | cut -d' ' -f2)
            echo "üì¶ Installed version: $INSTALLED_VERSION"

            if [[ "$INSTALLED_VERSION" == "$EXPECTED_VERSION" ]]; then
              echo "‚úÖ Version match! Installed: $INSTALLED_VERSION"
              break
            fi

            echo "‚è≥ Version mismatch. Expecting $EXPECTED_VERSION but got $INSTALLED_VERSION"
            echo "‚è±Ô∏è Waiting 15 seconds before retry..."
            sleep 15
          done

          # Final check
          FINAL_VERSION=$(pip show path-manager-qiaoy | grep ^Version: | cut -d' ' -f2)
          if [[ "$FINAL_VERSION" != "$EXPECTED_VERSION" ]]; then
            echo "‚ùå Still not the expected version after 5 attempts!"
            exit 1
          fi

      - name: ‚úÖ Test CLI proj init
        run: |
          proj init my_test_proj
          test -f my_test_proj/work/start.py
          grep -q 'print("Project initialized successfully!")' my_test_proj/work/start.py